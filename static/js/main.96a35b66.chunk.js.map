{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","sort","a","b","result","localeCompare","length","className","type","cn","onClick","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAY,UAAOT,GA2BzB,OAzBIK,GACFI,EAAaC,MAAK,SAACC,EAAGC,GACpB,IAAIC,EAEJ,OAAQR,GACN,KAAKJ,EACHY,EAASF,EAAEG,cAAcF,GACzB,MAEF,KAAKV,EACHW,EAASF,EAAEI,OAASH,EAAEG,OACtB,MAEF,QACE,OAAO,EAGX,OAAIR,GACMM,EAGHA,KAKT,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,0BACA,CAAE,YAA2B,aAAdb,IAEjBc,QAAS,kBAAMb,EAAaL,IAN9B,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,6BACA,CAAE,YAAab,IAAcH,IAE/BiB,QAAS,kBAAMb,EAAaJ,IAN9B,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,6BACA,CAAE,YAAaX,IAEjBY,QAAS,WACHd,GACFG,GAAcD,IARpB,qBAeA,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,EAAa,IACbE,GAAa,IALjB,sBAYF,6BACGC,EAAaW,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAI,UAAQ,OAAZ,SAA+BD,GAAPA,YCtGlCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.96a35b66.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = [...goodsFromServer];\n\n  if (sortField) {\n    visibleGoods.sort((a, b) => {\n      let result;\n\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          result = a.localeCompare(b);\n          break;\n\n        case SORT_FIELD_LENGTH:\n          result = a.length - b.length;\n          break;\n\n        default:\n          return 0;\n      }\n\n      if (isReverse) {\n        return -result;\n      }\n\n      return result;\n    });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info is-light',\n            { 'is-active': sortField === 'alphabet' },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success is-light',\n            { 'is-active': sortField === SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning is-light',\n            { 'is-active': isReverse },\n          )}\n          onClick={() => {\n            if (sortField) {\n              setIsReverse(!isReverse);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n            setIsReverse(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map((good, index) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}