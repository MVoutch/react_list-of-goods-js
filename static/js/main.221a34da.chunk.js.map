{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","sort","a","b","localeCompare","length","reverse","className","type","cn","onClick","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAY,UAAOT,GAqBzB,OAnBIK,GACFI,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKJ,EACH,OAAOU,EAAEE,cAAcD,GAEzB,KAAKV,EACH,OAAOS,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXP,GACFE,EAAaM,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYb,IAAcJ,IAE9BkB,QAAS,kBAAMb,EAAaL,IAN9B,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYb,IAAcH,IAE9BiB,QAAS,kBAAMb,EAAaJ,IAN9B,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaX,IAEjBY,QAAS,WACPX,GAAcD,IAPlB,sBAaEF,GAAaE,IACb,mCACE,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,EAAa,IACbE,GAAa,IALjB,wBAcN,6BACGC,EAAaW,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAI,UAAQ,OAAZ,SAA+BD,GAAPA,YClGlCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.221a34da.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = [...goodsFromServer];\n\n  if (sortField) {\n    visibleGoods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return a.localeCompare(b);\n\n        case SORT_FIELD_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => {\n            setIsReverse(!isReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <>\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setIsReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good, index) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}